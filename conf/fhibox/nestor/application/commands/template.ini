; Use this template to define a Command
;
; The command thus defined will be callable through our application.
;  
; Options defined in <app>/options are 'common' to all commands/arguments i.e. they 
; will behave in the same way (share the same characteristics defined here)
; It is however possible to customize an option for a particular command/argument
; (i.e. have that option behave differently when that command/argument is used)
; through an 'overloading'/'overriding' mechanism : see examples given in specific
; commands.
; -----------------------------------------------------------------------------




; Name of the command, used when calling the command
name = my_command
; For App commands, a one-line description displayed when listing all available commands
description = "My command does this (using double quotes lets us use simple 'quotes' inside"
; Displayed in the Help section at the end of the command help (command -h)
help = "Help
on
several
lines
"

; ids of options this command accepts
; this param is expected to be an array, so provide it as so:
;  option[] = id_of_1st_option
;  option[] = id_of_2nd_option
;  ...
option[] = option_1_id
option[] = option_2_id
option[] = option_3_id
option[] = option_4_id

; ids of arguments this command accepts
; this param is expected to be an array, so provide it as so:
;  argument[] = id_of_1st_option
;  argument[] = id_of_2nd_option
;  ...
argument[] = argument_1
argument[] = argument_2